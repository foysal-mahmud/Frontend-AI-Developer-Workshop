import{r as d,j as e,u as x,L as j,R as m,a as r}from"./index-ILwNe1Rb.js";const u=()=>{const[i,l]=d.useState(""),[s,a]=d.useState(""),[t,o]=d.useState(!1),h=async()=>{if(i.trim()){o(!0),a("");try{const c=await(await fetch("http://localhost:8000/ask-ollama/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:i})})).json();c.error?a(`Error: ${c.error}`):a(c.response)}catch(n){a(`Error: ${n}`)}finally{o(!1)}}},p=n=>{n.key==="Enter"&&!n.shiftKey&&(n.preventDefault(),h())};return e.jsxs("div",{className:"ollama-chat-container",children:[e.jsxs("div",{className:"ollama-chat-header",children:[e.jsx("h2",{children:"🤖 Ollama Chat Interface"}),e.jsx("p",{children:"Test your local Llama 3 model integration"})]}),e.jsxs("div",{className:"ollama-chat-input-container",children:[e.jsx("textarea",{value:i,onChange:n=>l(n.target.value),onKeyPress:p,placeholder:"Ask me anything...",className:"ollama-chat-textarea",disabled:t}),e.jsx("button",{onClick:h,disabled:t||!i.trim(),className:"ollama-chat-ask-button",children:t?"Thinking...":"Ask"})]}),t&&e.jsxs("div",{className:"ollama-chat-loading",children:[e.jsx("div",{className:"ollama-chat-spinner"}),e.jsx("p",{children:"Generating response..."})]}),s&&e.jsxs("div",{className:"ollama-chat-response-container",children:[e.jsx("h3",{children:"Response:"}),e.jsx("div",{className:"ollama-chat-response",children:s})]})]})},g=()=>e.jsxs("div",{className:"setup-guide-container",children:[e.jsx("h2",{children:"⚙️ Week 1 Setup Guide"}),e.jsxs("div",{className:"setup-guide-section",children:[e.jsx("h3",{children:"📋 Prerequisites"}),e.jsxs("ul",{className:"setup-guide-list",children:[e.jsx("li",{children:"Python 3.8+ installed"}),e.jsx("li",{children:"Node.js 16+ installed"}),e.jsx("li",{children:"Git installed"}),e.jsx("li",{children:"Code editor (VS Code recommended)"})]})]}),e.jsxs("div",{className:"setup-guide-section",children:[e.jsx("h3",{children:"🔧 Backend Setup"}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 1: Navigate to Backend"}),e.jsx("pre",{className:"setup-guide-code",children:"cd backend"})]}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 2: Create Virtual Environment"}),e.jsx("pre",{className:"setup-guide-code",children:"python3 -m venv venv"})]}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 3: Activate Virtual Environment"}),e.jsx("pre",{className:"setup-guide-code",children:"source venv/bin/activate  # macOS/Linux"}),e.jsx("pre",{className:"setup-guide-code",children:"venv\\Scripts\\activate     # Windows"})]}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 4: Install Dependencies"}),e.jsx("pre",{className:"setup-guide-code",children:"pip install -r requirements.txt"}),e.jsx("pre",{className:"setup-guide-code",children:"pip install python-dotenv openai requests"})]}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 5: Set Up Environment Variables"}),e.jsxs("p",{children:["Create a ",e.jsx("code",{children:".env"})," file in the backend folder:"]}),e.jsx("pre",{className:"setup-guide-code",children:"OPENAI_API_KEY=your_api_key_here"})]}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 6: Start Backend Server"}),e.jsx("pre",{className:"setup-guide-code",children:"uvicorn main:app --reload"})]})]}),e.jsxs("div",{className:"setup-guide-section",children:[e.jsx("h3",{children:"🤖 Ollama Setup (Optional - for local AI)"}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 1: Install Ollama"}),e.jsxs("p",{children:["Download from ",e.jsx("a",{href:"https://ollama.com/download",target:"_blank",rel:"noopener noreferrer",children:"https://ollama.com/download"})]})]}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 2: Start Ollama"}),e.jsx("pre",{className:"setup-guide-code",children:"ollama run llama3"})]})]}),e.jsxs("div",{className:"setup-guide-section",children:[e.jsx("h3",{children:"⚛️ Frontend Setup"}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 1: Navigate to Frontend"}),e.jsx("pre",{className:"setup-guide-code",children:"cd frontend"})]}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 2: Install Dependencies"}),e.jsx("pre",{className:"setup-guide-code",children:"npm install"})]}),e.jsxs("div",{className:"setup-guide-step",children:[e.jsx("h4",{children:"Step 3: Start Development Server"}),e.jsx("pre",{className:"setup-guide-code",children:"npm start"})]})]}),e.jsxs("div",{className:"setup-guide-section",children:[e.jsx("h3",{children:"✅ Verification"}),e.jsxs("ul",{className:"setup-guide-list",children:[e.jsxs("li",{children:["Backend running at: ",e.jsx("a",{href:"http://localhost:8000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:8000"})]}),e.jsxs("li",{children:["API docs at: ",e.jsx("a",{href:"http://localhost:8000/docs",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:8000/docs"})]}),e.jsxs("li",{children:["Frontend running at: ",e.jsx("a",{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"})]}),e.jsxs("li",{children:["Ollama API at: ",e.jsx("a",{href:"http://localhost:11434",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:11434"})]})]})]}),e.jsxs("div",{className:"setup-guide-section",children:[e.jsx("h3",{children:"🚨 Troubleshooting"}),e.jsxs("div",{className:"setup-guide-troubleshoot",children:[e.jsx("h4",{children:"Common Issues:"}),e.jsxs("ul",{className:"setup-guide-list",children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Port already in use:"})," Kill the process or use different ports"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Module not found:"})," Check if virtual environment is activated"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Ollama not found:"})," Reinstall or restart terminal"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"CORS errors:"})," Backend CORS is already configured"]})]})]})]})]}),v=()=>e.jsxs("div",{className:"api-integration-container",children:[e.jsx("h2",{children:"🔌 API Integration Guide"}),e.jsxs("div",{className:"api-integration-section",children:[e.jsx("h3",{children:"🎯 What We Built"}),e.jsx("p",{children:"In Week 1, we created a complete AI integration system with:"}),e.jsxs("ul",{className:"api-integration-list",children:[e.jsxs("li",{children:[e.jsx("strong",{children:"FastAPI Backend:"})," RESTful API server with AI endpoints"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"React Frontend:"})," User interface for interacting with AI"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Ollama Integration:"})," Local LLM for free, private AI"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Environment Security:"})," Secure API key management"]})]})]}),e.jsxs("div",{className:"api-integration-section",children:[e.jsx("h3",{children:"🏗️ Architecture Overview"}),e.jsxs("div",{className:"api-integration-architecture",children:[e.jsxs("div",{className:"api-integration-arch-item",children:[e.jsx("h4",{children:"Frontend (React)"}),e.jsx("p",{children:"User Interface → HTTP Request → Backend"})]}),e.jsxs("div",{className:"api-integration-arch-item",children:[e.jsx("h4",{children:"Backend (FastAPI)"}),e.jsx("p",{children:"Receive Request → Process → Call AI API → Return Response"})]}),e.jsxs("div",{className:"api-integration-arch-item",children:[e.jsx("h4",{children:"AI Provider (Ollama/OpenAI)"}),e.jsx("p",{children:"Generate AI Response → Return to Backend"})]})]})]}),e.jsxs("div",{className:"api-integration-section",children:[e.jsx("h3",{children:"📝 Backend Code Examples"}),e.jsxs("div",{className:"api-integration-code-example",children:[e.jsx("h4",{children:"1. Basic FastAPI Setup"}),e.jsx("pre",{className:"api-integration-code",children:`from fastapi import FastAPI
from pydantic import BaseModel
import os
from dotenv import load_dotenv

load_dotenv()
app = FastAPI()

class PromptRequest(BaseModel):
    prompt: str`})]}),e.jsxs("div",{className:"api-integration-code-example",children:[e.jsx("h4",{children:"2. OpenAI Integration"}),e.jsx("pre",{className:"api-integration-code",children:`from openai import OpenAI

client = OpenAI()

@app.post("/ask-openai/")
async def ask_openai(request: PromptRequest):
    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": request.prompt}]
        )
        return {"response": response.choices[0].message.content}
    except Exception as e:
        return {"error": str(e)}`})]}),e.jsxs("div",{className:"api-integration-code-example",children:[e.jsx("h4",{children:"3. Ollama Integration"}),e.jsx("pre",{className:"api-integration-code",children:`import requests

@app.post("/ask-ollama/")
async def ask_ollama(request: PromptRequest):
    try:
        response = requests.post(
            "http://localhost:11434/api/chat",
            json={
                "model": "llama3",
                "messages": [{"role": "user", "content": request.prompt}],
                "stream": False
            }
        )
        data = response.json()
        return {"response": data["message"]["content"]}
    except Exception as e:
        return {"error": str(e)}`})]})]}),e.jsxs("div",{className:"api-integration-section",children:[e.jsx("h3",{children:"⚛️ Frontend Code Examples"}),e.jsxs("div",{className:"api-integration-code-example",children:[e.jsx("h4",{children:"1. React Hook for API Calls"}),e.jsx("pre",{className:"api-integration-code",children:`const [prompt, setPrompt] = useState("");
const [response, setResponse] = useState("");
const [isLoading, setIsLoading] = useState(false);

const handleAsk = async () => {
  setIsLoading(true);
  try {
    const res = await fetch("http://localhost:8000/ask-ollama/", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ prompt }),
    });
    const data = await res.json();
    setResponse(data.response);
  } catch (error) {
    setResponse(\`Error: \${error}\`);
  } finally {
    setIsLoading(false);
  }
};`})]})]}),e.jsxs("div",{className:"api-integration-section",children:[e.jsx("h3",{children:"🔐 Security Best Practices"}),e.jsxs("ul",{className:"api-integration-list",children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Environment Variables:"})," Never hardcode API keys"]}),e.jsxs("li",{children:[e.jsx("strong",{children:".env Files:"})," Keep secrets out of version control"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"CORS Configuration:"})," Control which domains can access your API"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Error Handling:"})," Don't expose sensitive information in errors"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Input Validation:"})," Validate all user inputs"]})]})]}),e.jsxs("div",{className:"api-integration-section",children:[e.jsx("h3",{children:"🚀 Next Steps"}),e.jsxs("div",{className:"api-integration-next-steps",children:[e.jsxs("div",{className:"api-integration-step",children:[e.jsx("h4",{children:"Week 2: RAG (Retrieval-Augmented Generation)"}),e.jsx("p",{children:"Add vector databases and document retrieval to your AI system"})]}),e.jsxs("div",{className:"api-integration-step",children:[e.jsx("h4",{children:"Week 3: Document Processing"}),e.jsx("p",{children:"Parse PDFs, DOCX files, and integrate with your RAG pipeline"})]}),e.jsxs("div",{className:"api-integration-step",children:[e.jsx("h4",{children:"Week 4: Deployment"}),e.jsx("p",{children:"Dockerize your application and deploy it to production"})]})]})]})]}),I=()=>{const i=x(),l=[{path:"/week-1",label:"Overview",icon:"📋"},{path:"/week-1/setup",label:"Setup Guide",icon:"⚙️"},{path:"/week-1/api-integration",label:"API Integration",icon:"🔌"},{path:"/week-1/chat",label:"Ollama Chat",icon:"🤖"}];return e.jsxs("div",{className:"week1-container",children:[e.jsxs("div",{className:"week1-header",children:[e.jsx("h1",{className:"week1-title",children:"Week 1: Foundations & API Integration"}),e.jsx("p",{className:"week1-subtitle",children:"Set up Python backend, integrate AI APIs, and build a React frontend"})]}),e.jsx("div",{className:"week1-navigation",children:l.map(s=>e.jsxs(j,{to:s.path,className:`week1-nav-item ${i.pathname===s.path?"active":""}`,children:[e.jsx("span",{className:"week1-nav-icon",children:s.icon}),s.label]},s.path))}),e.jsx("div",{className:"week1-content",children:e.jsxs(m,{children:[e.jsx(r,{path:"/",element:e.jsx(N,{})}),e.jsx(r,{path:"/setup",element:e.jsx(g,{})}),e.jsx(r,{path:"/api-integration",element:e.jsx(v,{})}),e.jsx(r,{path:"/chat",element:e.jsx(u,{})})]})})]})},N=()=>e.jsxs("div",{className:"week1-section",children:[e.jsx("h2",{children:"Week 1 Overview"}),e.jsxs("div",{className:"week1-card-grid",children:[e.jsxs("div",{className:"week1-card",children:[e.jsx("h3",{children:"🎯 Learning Objectives"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Set up Python backend (FastAPI)"}),e.jsx("li",{children:"Integrate OpenAI/Anthropic/Gemini APIs"}),e.jsx("li",{children:"Build a simple React frontend"}),e.jsx("li",{children:"Make your first AI API call"})]})]}),e.jsxs("div",{className:"week1-card",children:[e.jsx("h3",{children:"🛠️ What You'll Build"}),e.jsxs("ul",{children:[e.jsx("li",{children:"FastAPI server with AI endpoints"}),e.jsx("li",{children:"React app to call backend endpoints"}),e.jsx("li",{children:"Local Ollama integration"}),e.jsx("li",{children:"Secure environment variable setup"})]})]}),e.jsxs("div",{className:"week1-card",children:[e.jsx("h3",{children:"📚 Key Concepts"}),e.jsxs("ul",{children:[e.jsx("li",{children:"REST API design"}),e.jsx("li",{children:"Environment variables & security"}),e.jsx("li",{children:"Frontend-backend communication"}),e.jsx("li",{children:"Local vs cloud AI models"})]})]})]})]});export{I as default};
